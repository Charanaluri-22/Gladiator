{"ast":null,"code":"import { switchMap, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./user-store.service\";\nexport let InterceptorService = /*#__PURE__*/(() => {\n  class InterceptorService {\n    constructor(userStoreService) {\n      this.userStoreService = userStoreService;\n    }\n    intercept(request, next) {\n      return this.userStoreService.getUser().pipe(take(1),\n      // Get the first emitted value and complete the subscription\n      switchMap(user => {\n        if (user.token) {\n          request = request.clone({\n            setHeaders: {\n              Authorization: `Bearer ${user.token}`\n            }\n          });\n        }\n        return next.handle(request);\n      }));\n    }\n  }\n  InterceptorService.ɵfac = function InterceptorService_Factory(t) {\n    return new (t || InterceptorService)(i0.ɵɵinject(i1.UserStoreService));\n  };\n  InterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InterceptorService,\n    factory: InterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n  return InterceptorService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}