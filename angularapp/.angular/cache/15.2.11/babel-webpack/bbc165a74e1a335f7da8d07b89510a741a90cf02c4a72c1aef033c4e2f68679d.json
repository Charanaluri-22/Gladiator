{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user-store.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthguardGuard = /*#__PURE__*/(() => {\n  class AuthguardGuard {\n    constructor(userStoreService, router) {\n      this.userStoreService = userStoreService;\n      this.router = router;\n    }\n    canActivate(route, state) {\n      return this.userStoreService.getUser().pipe(map(user => {\n        var _a, _b;\n        if (!(user === null || user === void 0 ? void 0 : user.token)) {\n          this.router.navigate(['/login']);\n          alert(\"User must be logged in\");\n          return false;\n        }\n        const userRole = (_a = user.role) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n        const requiredRole = (_b = route.data['role']) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n        // Allow admin to access all routes\n        if (userRole === 'admin') {\n          return true;\n        }\n        // Allow user to access only user routes\n        if (requiredRole && requiredRole !== userRole) {\n          this.router.navigate(['/error']);\n          alert(\"You do not have permission to access this page\");\n          return false;\n        }\n        return true;\n      }));\n    }\n  }\n  AuthguardGuard.ɵfac = function AuthguardGuard_Factory(t) {\n    return new (t || AuthguardGuard)(i0.ɵɵinject(i1.UserStoreService), i0.ɵɵinject(i2.Router));\n  };\n  AuthguardGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthguardGuard,\n    factory: AuthguardGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthguardGuard;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}